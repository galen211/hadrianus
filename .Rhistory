install.packages("gganimate")
library(devtools)
devtools::install_github("thomasp85/gganimate")
shiny::runApp()
packages.used = c("readxl", "tidyr", "ggplot2", "stringr","clipr","knitr","readr","dplyr","lubridate")
# check packages that need to be installed.
packages.needed=setdiff(packages.used,
intersect(installed.packages()[,1],
packages.used))
# install additional packages
if(length(packages.needed)>0){
install.packages(packages.needed, dependencies = TRUE)
}
output <- lapply(packages.used, require, character.only = TRUE)
assertthat::assert_that(all(output)) #  all code libraries are correctly loaded
?seq
start_date <- ymd("20140101")
end_date <- ymd("20190101")
average_terms <- 30
num_invoices_per_day <- 100
company_codes <- seq(1010, 4350, by = 10)
seq(from = start_date, to = end_date, by = 1)
?add_row
?rbinom
packages.used = c("readxl", "tidyr", "ggplot2", "stringr","clipr","knitr","readr","dplyr","lubridate")
# check packages that need to be installed.
packages.needed=setdiff(packages.used,
intersect(installed.packages()[,1],
packages.used))
# install additional packages
if(length(packages.needed)>0){
install.packages(packages.needed, dependencies = TRUE)
}
output <- lapply(packages.used, require, character.only = TRUE)
assertthat::assert_that(all(output)) #  all code libraries are correctly loaded
x <- map(1:3, ~ runif(2))
library(purrr)
x <- map(1:3, ~ runif(2))
x
as_mapper(~ length(unique(.x)))
mtcars
mtcars %>% summarise_all(map_chr(unique(.)))
split(mtcars, mtcars$cyl)
by_cyl %>%
map(~ lm(mpg ~ wt, data = .x)) %>%
map(coef) %>%
map_dbl(2)
shiny::runApp()
?data
data()
data("USPersonalExpenditure")
USPersonalExpenditure
x <- data("USPersonalExpenditure")
x
View(mtcars)
??shiny
?shinyApp
?shinyApp
shiny::runApp()
runApp()
runApp()
?DiagrammeR
install.packages("svgPanZoom")
shiny::runApp()
runApp()
runApp()
ev <- eventdataR::patients
ev
runApp()
runApp()
as_date(ev$time)
ev
runApp()
unique(ev$registration_type)
ev %>% filter_activity() %>% unique()
ev %>% filter_activity(is.null() == FALSE) %>% unique()
typeof(ev)
View(ev)
unique(ev$handling)
runApp()
ev
runApp()
runApp()
runApp()
runApp()
?precedence_matrix
runApp()
?trace_explorer
?dotchart
?dotplot
?dotted_chart
?resource_map
?resource_matrix
runApp()
runApp()
?tags
runApp()
runApp()
eventdataR::sepsis
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
Sys.unsetenv("http_proxy")
??install.packages()
ap <- available.packages()
View(ap)
?available.packages
?pkgDep
??pkgDep
library(tools)
library(readr)
library(tools)
# get license dependencies
tags <- c(
"shiny",
"shinydashboard",
"bupaR",
"eventdataR",
"xesreadR",
"edeaR",
"processmapR",
"processmonitR",
"dplyr",
"stringr",
"readr",
"lubridate",
"DiagrammeR",
)
d <- package.dependencies(tags, depLevel = "Depends")
library(readr)
library(tools)
# get license dependencies
tags <- c(
"shiny",
"shinydashboard",
"bupaR",
"eventdataR",
"xesreadR",
"edeaR",
"processmapR",
"processmonitR",
"dplyr",
"stringr",
"readr",
"lubridate",
"DiagrammeR",
)
d <- package_dependencies(tags, depLevel = "Depends")
?package_dependencies
library(readr)
library(tools)
# get license dependencies
tags <- c(
"shiny",
"shinydashboard",
"bupaR",
"eventdataR",
"xesreadR",
"edeaR",
"processmapR",
"processmonitR",
"dplyr",
"stringr",
"readr",
"lubridate",
"DiagrammeR",
)
d <- package_dependencies(packages = tags, which = c("Depends"))
View(d)
installed.packages()
df <- install.packages()
df <- install.packages() %>% as.data.frame()
library(dplyr)
df <- install.packages() %>% as.data.frame()
df <- installed.packages() %>% as.data.frame()
tags <- c(
"shiny",
"shinydashboard",
"bupaR",
"eventdataR",
"xesreadR",
"edeaR",
"processmapR",
"processmonitR",
"dplyr",
"stringr",
"readr",
"lubridate",
"DiagrammeR"
)
df %>% filter(Package %in% tags)
df %>% filter(Package %in% tags) %>% select(License)
df %>% filter(Package %in% tags) %>% select(Package,License)
df %>% filter(Package %in% tags) %>% select(Package,License, License_restricts_use)
shiny::runApp()
runApp()
runApp()
shiny::runApp()
installed.packages()
d <- package_dependencies(packages = tags, which = c("Depends"))
source('~/GitHub/hadrianus/scripts/license_dependencies.R')
pkg.installed <- install.packages()
pkg.installed <- installed.packages()
pkg.installed <- installed.packages() %>% as.data.frame()
library(dplyr)
pkg.installed <- installed.packages() %>% as.data.frame()
View(pkg.installed)
pkg.installed %>% filter(pkg.used <- c(
"shiny",
"shinydashboard",
"bupaR",
"eventdataR",
"xesreadR",
"edeaR",
"processmapR",
"processmonitR",
"dplyr",
"stringr",
"readr",
"lubridate",
"DiagrammeR"
))
pkg.used <- c(
"shiny",
"shinydashboard",
"bupaR",
"eventdataR",
"xesreadR",
"edeaR",
"processmapR",
"processmonitR",
"dplyr",
"stringr",
"readr",
"lubridate",
"DiagrammeR"
)
df <- pkg.installed %>% filter(Package %in% pkg.used)
View(df)
library(clipr)
write_clip(df)
View(df)
write.csv(df, file = "license.csv")
library(dbplyr)
library(dplyr)
library(readr)
library(readxl)
library(processmapR)
library(bupaR)
library(lubridate)
library(tidyr)
library(stringr)
library(purrr)
list.files(path = "single_sample/")
de1_summary <- read_csv(path = "single_sample/DE1_0_2008_Beneficiary_Summary_File_Sample_17.csv")
de1_summary <- read_csv(file = "single_sample/DE1_0_2008_Beneficiary_Summary_File_Sample_17.csv")
View(de1_summary)
de1_inpatient <- read_csv(file = "single_sample/DE1_0_2008_to_2010_Inpatient_Claims_Sample_17.csv")
inpatient_beneficiaries <- de1_inpatient %>% select(DESYNPUF_ID) %>% unique()
de1_outpatient <- read_csv(file = "single_sample/DE1_0_2008_to_2010_Inpatient_Claims_Sample_17.csv") %>%
filter(DESYNPUF_ID %in% inpatient_beneficiaries)
de1_inpatient <- read_csv(file = "single_sample/DE1_0_2008_to_2010_Inpatient_Claims_Sample_17.csv")
inpatient_beneficiaries <- de1_inpatient %>% select(DESYNPUF_ID) %>% unique()
inpatient_beneficiaries <- de1_inpatient %>% select(DESYNPUF_ID) %>% unique() %>% as.character()
inpatient_beneficiaries <- de1_inpatient %>% select(DESYNPUF_ID) %>% unique() %>% as.vector()
inpatient_beneficiaries
inpatient_beneficiaries %>% as.vector()
inpatient_beneficiaries %>%as.character()
inpatient_beneficiaries <- de1_inpatient %>% select(DESYNPUF_ID) %>% unique() %>% as.character()
de1_outpatient <- read_csv(file = "single_sample/DE1_0_2008_to_2010_Outpatient_Claims_Sample_17.csv") %>%
filter(DESYNPUF_ID %in% inpatient_beneficiaries)
de1_outpatient <- read_csv(file = "single_sample/DE1_0_2008_to_2010_Outpatient_Claims_Sample_17.csv")
df <- de1_outpatient %>% filter(DESYNPUF_ID %in% inpatient_beneficiaries)
inpatient_beneficiaries <- de1_inpatient %>% select(DESYNPUF_ID) %>% unique() %>% as_vector()
df <- de1_outpatient %>% filter(DESYNPUF_ID %in% inpatient_beneficiaries)
de1_inpatient <- read_csv(file = "single_sample/DE1_0_2008_to_2010_Inpatient_Claims_Sample_17.csv") %>%
mutate("CLM_TYPE" = "Inpatient")
df <- de1_outpatient %>% filter(DESYNPUF_ID %in% inpatient_beneficiaries) %>%
mutate("CLM_TYPE" = "Outpatient") %>%
rbind(de1_inpatient)
common_cols <- intersect(colnames(de1_outpatient),colnames(de1_inpatient))
de1_inpatient <- de1_inpatient %>%
mutate("CLM_TYPE" = "Inpatient") %>%
select(common_cols)
de1_outpatient <- de1_outpatient %>%
mutate("CLM_TYPE" = "Inpatient") %>%
select(common_cols)
df <- de1_outpatient %>% filter(DESYNPUF_ID %in% inpatient_beneficiaries) %>%
rbind(de1_inpatient)
View(df)
de1_inpatient <- de1_inpatient %>%
select(common_cols) %>%
mutate("CLM_TYPE" = "Inpatient")
de1_outpatient <- de1_outpatient %>%
select(common_cols) %>%
mutate("CLM_TYPE" = "Inpatient")
df <- de1_outpatient %>% filter(DESYNPUF_ID %in% inpatient_beneficiaries) %>%
rbind(de1_inpatient)
View(df)
library(devtools)
?install_github
